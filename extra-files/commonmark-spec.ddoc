REQUIRE_JAVASCRIPT = <p id="requires_javascript">This page requires javascript to display the test results.</p>
TEST_TOTALS =
<table id="totals">
<thead>
<tr><th colspan="2">Successes</th><th colspan="3">Failures</th></tr>
<tr><th>Passed</th><th>Passed After Adjusting Whitespace</th><th>Expected Failures</th><th>Unexpected Failures</th><th>Failed to Run</th></tr>
</thead>
<tbody>
<tr><td id="passes"></td><td id="lenient-passes"></td><td id="expected-failures"></td><td id="failures"></td><td id="not-run"></td></tr>
</tbody>
</table>
EXAMPLE_HEADER = <h3 class="example"><a href="#example-$1" name="example-$1" title="Permalink to this example">Example $1</a></h3>
<div class="spec-link"><a href="http://spec.commonmark.org/0.28/#example-$1">see it in the spec</a></div>
EXPLANATION = <div class="explanation"><div id="result-$1" class="result exclude"></div> <span id="explanation-$1">$2</span></div>
MARKDOWN_TEST =
<div class="html code-block"><strong>Rendered HTML</strong><pre><code id="actual-code-$1"></code></pre></div>
<div id="actual-$1" class="actual">$+</div>
EXPECTED_RESULT =
<div class="html code-block"><strong>Expected HTML</strong><pre><code id="expected-code-$1"></code></pre></div>
<div id="expected-$1" class="expected" data-fail-reason="$2">$3</div>

DDOC_MODULE_MEMBERS = $0
DDOC_MEMBER = $0
DDOC_DECL = <div class="declaration">$0</div>
DDOC_DECL_DD = $0
DDOC_SECTIONS = $0
DDOC_SUMMARY = $0
DDOC_DESCRIPTION = $0
D_CODE = <pre><code>$0</code></pre>
OTHER_CODE = <pre><code class="language-$1">$+</code></pre>
D_INLINECODE = <code>$0</code>

DDOC =
<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <title>DDoc Markdown Tests</title>
    <style type="text/css" media="screen">
        body {
            font-family: sans-serif;
        }
        #totals td {
            text-align: center;
            width: 20%;
            font-size: 1.2em;
        }
        #passes {
            background-color: #8f8;
        }
        #lenient-passes {
            background-color: #cc8;
        }
        #expected-failures {
            background-color: #fc8;
        }
        #failures {
            background-color: #f88;
        }
        #not-run {
            background-color: #b55;
        }
        .declaration, .ddoc_header_anchor {
            display: none;
        }
        .example > a {
            color: black;
            text-decoration: none;
        }
        .example > a:hover {
            text-decoration: underline;
        }
        .example > a:hover::after {
            content: " \00B6"; /* Unicode pilcrow symbol */
            color: #gray;
        }
        .code-block {
            float: left;
            margin: 0;
            width: 33%;
            margin-bottom: 2em;
        }
        .code-block > pre {
            margin: 2px;
            background-color: #f6f6f6;
            border: 1px solid silver;
            -webkit-border-radius: 4px;
            -moz-border-radius: 4px;
            border-radius: 4px;
        }
        .actual, .expected {
            display: none;
        }
        h1, h2, h3, h4 {
            clear: both;
        }
        .result {
            display: inline-block;
            width: 1em;
            height: 1em;
            -webkit-border-radius: .5em;
            -moz-border-radius: .5em;
            border-radius: .5em;
        }
        .failed, .lenient-failed {
            background: red;
        }
        .expected-failed {
            background: orange;
        }
        .exclude {
            background: maroon;
        }
        .lenient-success {
            background: #990;
        }
        .success {
            background: green;
        }
        .code-block span {
            display: inline-block;
            background: radial-gradient(circle, #cc0, rgba(192,192,0,0) 2px);
        }
    </style>
  </head>
  <body id="ddoc_main" class="ddoc dlang">
    <div class="content_wrapper">
      <section id="module_content">$(BODY)</section>
    </div>
  </body>
  <script>
    document.getElementById('requires_javascript').style.display = 'none';
    var totals = {total: 0, passes: 0, lenientPasses: 0, expectFailures: 0, failures: 0};
    for (var i = 1; i < 2000; i++) {
      var markdown = document.getElementById('markdown-' + i);
      if (!markdown) continue; markdown = markdown.value;
      showCode(markdown, 'markdown-code-' + i);
      ++totals.total;

      var expectedEl = document.getElementById('expected-' + i);
      if (!expectedEl) continue; var expected = expectedEl.innerHTML;
      var failReason = expectedEl.dataset.failReason;
      showCode(expected, 'expected-code-' + i);
      expectedEl.innerHTML = '';

      var actualEl = document.getElementById('actual-' + i);
      if (!actualEl) continue; var actual = actualEl.innerHTML;
      showCode(actual, 'actual-code-' + i);
      actualEl.innerHTML = '';

      var failed = expected != actual;
      var lenient = '';
      if (!failed) ++totals.passes;

      // be lenient with paragraphs and whitespace:
      if (failed) { expected = normalizeWhitespace(expected); actual = normalizeWhitespace(actual); failed = expected != actual; lenient = failed ? '' : 'lenient-'; if (failed) console.log(i + ' lenient-compared:\n' + actual + '\n   * to:\n' + expected); if (!failed) ++totals.lenientPasses; }

      var className = lenient + (failed ? 'failed' : 'success');
      if (Number(failReason)) { className = 'expected-' + className; failReason = ' <a href="#fail_reason_' + failReason + '">as expected</a>'; } else failReason = '';
      document.getElementById('result-' + i).className = 'result ' + className;
      if (lenient && !failed) lenient = ' after adjusting whitespace'; else lenient = '';
      document.getElementById('explanation-' + i).innerHTML = (failed ? 'Failed' : 'Passed') + failReason + lenient + '.';

      if (failed && failReason) ++totals.expectFailures;
      if (failed && !failReason) ++totals.failures;
    }
    document.getElementById('passes').textContent = totals.passes;
    document.getElementById('lenient-passes').textContent = totals.lenientPasses;
    document.getElementById('expected-failures').textContent = totals.expectFailures;
    document.getElementById('failures').textContent = totals.failures;
    document.getElementById('not-run').textContent = (totals.total - totals.passes - totals.lenientPasses - totals.expectFailures - totals.failures);

    function showCode(code, id) {
      var element = document.getElementById(id);
      element.textContent = code;
      element.innerHTML = element.innerHTML.replace(/ /g, '<span> </span>').replace(/\t/g, 'â†’');
    }

    function normalizeWhitespace(s) {
        return s.trim().replace(/<\/p>\r?\n<\//gm, '</p></').replace(/<\/p>\r?\n<p>/gm, '</p><br><br><p>').replace(/<\/?p>/g, '').replace(/>(\s)+/gm, '>').replace(/(\s)+</gm, '<').replace(/<br><br>$/, '');
    }
  </script>
</html>$(LF)