EXAMPLE_HEADER = <h3 class="example"><a href="#example-$1" name="example-$1">Example $1</a></h3>
<div class="spec-link"><a href="http://spec.commonmark.org/0.28/#example-$1">see it in the spec</a></div>
EXPLANATION = <div class="explanation"><div id="result-$1" class="result exclude"></div> <span id="explanation-$1">$2</span></div>
MARKDOWN_TEST =
<div class="html code-block"><strong>Rendered HTML</strong><pre><code id="actual-code-$1"></code></pre></div>
<div id="actual-$1" class="actual">$2</div>
EXPECTED_RESULT =
<div class="html code-block"><strong>Expected HTML</strong><pre><code id="expected-code-$1"></code></pre></div>
<div id="expected-$1" class="expected" data-fail-reason="$2">$3</div>

D_CODE = <pre><code>$0</code></pre>

DDOC =
<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <title>DDoc Markdown Tests</title>
    <style type="text/css" media="screen">
        body {
            font-family: sans-serif;
        }
        .code-block {
            float: left;
            margin: 0;
            width: 33%;
            margin-bottom: 2em;
        }
        .code-block > pre {
            margin: 2px;
            background-color: #f6f6f6;
            border: 1px solid silver;
            -webkit-border-radius: 4px;
            -moz-border-radius: 4px;
            border-radius: 4px;
        }
        .actual, .expected {
            display: none;
        }
        h1, h2, h3, h4 {
            clear: both;
        }
        .result {
            display: inline-block;
            width: 1em;
            height: 1em;
            -webkit-border-radius: .5em;
            -moz-border-radius: .5em;
            border-radius: .5em;
        }
        .failed, .lenient-failed {
            background: red;
        }
        .exclude {
            background: maroon;
        }
        .lenient-success {
            background: orange;
        }
        .success {
            background: green;
        }
        .code-block span {
            display: inline-block;
            background: radial-gradient(circle, #cc0, rgba(192,192,0,0) 2px);
        }
    </style>
  </head>
  <body id="ddoc_main" class="ddoc dlang">
    <div class="content_wrapper">
      <section id="module_content">$(BODY)</section>
    </div>
  </body>
  <script>
    for (var i = 1; i < 2000; i++) {
      var markdown = document.getElementById('markdown-' + i);
      if (!markdown) continue; markdown = markdown.value;
      showCode(markdown, 'markdown-code-' + i);
      var expected = document.getElementById('expected-' + i);
      if (!expected) continue; expected = expected.innerHTML;
      showCode(expected, 'expected-code-' + i);
      var actual = document.getElementById('actual-' + i);
      if (!actual) continue; actual = actual.innerHTML;
      showCode(actual, 'actual-code-' + i);

      var failed = expected != actual;
      var failReason = document.getElementById('expected-' + i).dataset.failReason;
      var lenient = '';

      // be lenient with paragraphs and whitespace:
      if (failed) { expected = normalizeWhitespace(expected); actual = normalizeWhitespace(actual); console.log('lenient-comparing ' + actual + ' to ' + expected); failed = expected != actual; lenient = 'lenient-'; }

      document.getElementById('result-' + i).className = 'result ' + lenient + (failed ? 'failed' : 'success');
      if (Number(failReason)) failReason = ' <a href="#fail_reason_' + failReason + '">as expected</a>'; else failReason = '';
      if (lenient && !failed) lenient = ' after adjusting whitespace'; else lenient = '';
      document.getElementById('explanation-' + i).innerHTML = (failed ? 'Failed' : 'Passed') + failReason + lenient + '.';
    }

    function showCode(code, id) {
      var element = document.getElementById(id);
      element.textContent = code;
      element.innerHTML = element.innerHTML.replace(/ /g, '<span> </span>').replace(/\t/g, 'â†’');
    }

    function normalizeWhitespace(s) {
        return s.trim().replace(/<\/p>\r?\n<p>/gm, '</p><br><br><p>').replace(/<\/?p>/g, '').replace(/>(\s)+/gm, '>').replace(/(\s)+</gm, '<');
    }
  </script>
</html>$(LF)